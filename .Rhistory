from pathlib import Path
import pandas as pd
import numpy as np
from scipy.stats import trim_mean
from statsmodels import robust
import wquantiles
import seaborn as sns
import matplotlib.pylab as plt
try:
import common
DATA = common.dataDirectory()
except ImportError:
DATA = Path().resolve() / 'data'
STATE_CSV = DATA / 'state.csv'
state = pd.read_csv(STATE_CSV)
print(state.head(8))
print(state['Population'].mean())
print(trim_mean(state['Population'], 0.1))
print(state['Population'].median())
print(state['Murder.Rate'].mean())
print(wquantiles.median(state['Murder.Rate'], weights=state['Population']))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyr)
library(ggplot2)
library(vioplot)
library(corrplot)
library(gmodels)
library(matrixStats)
library(reticulate)
# conda_install("r-reticulate", "wquantiles") #for python code execution
# conda_install("r-reticulate", "statsmodels") #for python code execution
install.packages(c("conquer", "ggExtra", "lmtest", "MASS", "Matrix", "Rdpack", "sass"))
PSDS_PATH <- file.path((getwd())) #Adjust the syntax to get the specific file path.
PSDS_PATH
state <- read.csv(file.path(PSDS_PATH, 'data', 'state.csv'))
state
state %>% class()
state_asc <- state
#Change the format of numbers, e.g. 10000 -> 10,000
state_asc[['Population']] <- formatC(state_asc[['Population']], format='d', digits=0, big.mark=',')
state_asc[1:8,]
mean(state[['Population']])
mean(state[['Population']], trim=0.1)
median(state[['Population']])
mean(state[['Murder.Rate']])
weighted.mean(state[['Murder.Rate']], w=state[['Population']])
# library('matrixStats')
weightedMedian(state[['Murder.Rate']], w=state[['Population']])
reticulate::repl_python()
from pathlib import Path
reticulate::repl_python()
